[gd_resource type="VisualShader" load_steps=19 format=3 uid="uid://c2u2mejc0aym1"]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_y1xyd"]

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_oq1jc"]
parameter_name = "EdgeOffset"
default_value_enabled = true
default_value = 0.1

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_yyhq0"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 5

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_x7dqa"]
parameter_name = "LightColor"
default_value_enabled = true
default_value = Color(3.08037e-06, 0.779063, 0.945481, 1)

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_iyiou"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(1, 1, 1, 1), 2, Quaternion(0.5, 0.5, 0.5, 0.5)]
op_type = 5

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_gt4dg"]
parameter_name = "strength"
default_value_enabled = true
default_value = 2.0

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_dgncg"]

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_itq3g"]
operator = 2

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_mjjf4"]
source = 5

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_r167h"]
parameter_name = "Albedo"

[sub_resource type="FastNoiseLite" id="FastNoiseLite_vg64d"]
frequency = 0.0251

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_1dwfy"]
noise = SubResource("FastNoiseLite_vg64d")

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_1b7rb"]
expanded_output_ports = [0]
texture = SubResource("NoiseTexture2D_1dwfy")

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_tvwhx"]
input_name = "time"

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_vp12y"]
function = 0

[sub_resource type="VisualShaderNodeRemap" id="VisualShaderNodeRemap_basuw"]
default_input_values = [1, -1.0, 2, 1.0, 3, 0.0, 4, 1.0]

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_01qwr"]
parameter_name = "FloatParameter"
default_value_enabled = true
default_value = 2.0

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_guvex"]
operator = 2

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;

uniform sampler2D Albedo;
uniform sampler2D tex_frg_4;
uniform vec4 LightColor : source_color = vec4(0.000003, 0.779063, 0.945481, 1.000000);
uniform float FloatParameter = 2.0;
uniform float EdgeOffset = 0.10000000149012;
uniform float strength = 2.0;



void fragment() {
	vec4 n_out2p0;
// Texture2D:2
	n_out2p0 = texture(Albedo, UV);


// Texture2D:4
	vec4 n_out4p0 = texture(tex_frg_4, UV);
	float n_out4p1 = n_out4p0.r;


// ColorParameter:13
	vec4 n_out13p0 = LightColor;


// Input:5
	float n_out5p0 = TIME;


// FloatParameter:8
	float n_out8p0 = FloatParameter;


// FloatOp:9
	float n_out9p0 = n_out5p0 * n_out8p0;


// FloatFunc:6
	float n_out6p0 = sin(n_out9p0);


	float n_out7p0;
// Remap:7
	float n_in7p1 = -1.00000;
	float n_in7p2 = 1.00000;
	float n_in7p3 = 0.00000;
	float n_in7p4 = 1.00000;
	{
		float __input_range = n_in7p2 - n_in7p1;
		float __output_range = n_in7p4 - n_in7p3;
		n_out7p0 = n_in7p3 + __output_range * ((n_out6p0 - n_in7p1) / __input_range);
	}


// FloatParameter:11
	float n_out11p0 = EdgeOffset;


// FloatOp:10
	float n_out10p0 = n_out7p0 + n_out11p0;


// Mix:14
	vec4 n_in14p0 = vec4(0.00000, 0.00000, 0.00000, 0.00000);
	vec4 n_out14p0 = mix(n_in14p0, n_out13p0, vec4(n_out10p0));


// Step:12
	vec4 n_out12p0 = step(vec4(n_out4p1), n_out14p0);


// FloatParameter:15
	float n_out15p0 = strength;


// VectorCompose:16
	vec3 n_out16p0 = vec3(n_out15p0, n_out15p0, n_out15p0);


// VectorOp:17
	vec3 n_out17p0 = vec3(n_out12p0.xyz) * n_out16p0;


// Output:0
	ALBEDO = vec3(n_out2p0.xyz);
	ALPHA = n_out4p0.x;
	EMISSION = n_out17p0;
	ALPHA_SCISSOR_THRESHOLD = n_out7p0;


}
"
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture_mjjf4")
nodes/fragment/2/position = Vector2(-760, 60)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture2DParameter_r167h")
nodes/fragment/3/position = Vector2(-1160, -60)
nodes/fragment/4/node = SubResource("VisualShaderNodeTexture_1b7rb")
nodes/fragment/4/position = Vector2(-1140, 260)
nodes/fragment/5/node = SubResource("VisualShaderNodeInput_tvwhx")
nodes/fragment/5/position = Vector2(-2320, 1060)
nodes/fragment/6/node = SubResource("VisualShaderNodeFloatFunc_vp12y")
nodes/fragment/6/position = Vector2(-1780, 1100)
nodes/fragment/7/node = SubResource("VisualShaderNodeRemap_basuw")
nodes/fragment/7/position = Vector2(-1560, 1080)
nodes/fragment/8/node = SubResource("VisualShaderNodeFloatParameter_01qwr")
nodes/fragment/8/position = Vector2(-2320, 1240)
nodes/fragment/9/node = SubResource("VisualShaderNodeFloatOp_guvex")
nodes/fragment/9/position = Vector2(-1980, 1080)
nodes/fragment/10/node = SubResource("VisualShaderNodeFloatOp_y1xyd")
nodes/fragment/10/position = Vector2(-1080, 900)
nodes/fragment/11/node = SubResource("VisualShaderNodeFloatParameter_oq1jc")
nodes/fragment/11/position = Vector2(-1520, 820)
nodes/fragment/12/node = SubResource("VisualShaderNodeStep_yyhq0")
nodes/fragment/12/position = Vector2(-500, 460)
nodes/fragment/13/node = SubResource("VisualShaderNodeColorParameter_x7dqa")
nodes/fragment/13/position = Vector2(-1920, 600)
nodes/fragment/14/node = SubResource("VisualShaderNodeMix_iyiou")
nodes/fragment/14/position = Vector2(-820, 740)
nodes/fragment/15/node = SubResource("VisualShaderNodeFloatParameter_gt4dg")
nodes/fragment/15/position = Vector2(-520, 660)
nodes/fragment/16/node = SubResource("VisualShaderNodeVectorCompose_dgncg")
nodes/fragment/16/position = Vector2(-180, 640)
nodes/fragment/17/node = SubResource("VisualShaderNodeVectorOp_itq3g")
nodes/fragment/17/position = Vector2(80, 420)
nodes/fragment/connections = PackedInt32Array(3, 0, 2, 2, 2, 0, 0, 0, 4, 0, 0, 1, 6, 0, 7, 0, 7, 0, 0, 19, 5, 0, 9, 0, 8, 0, 9, 1, 9, 0, 6, 0, 7, 0, 10, 0, 11, 0, 10, 1, 4, 1, 12, 0, 13, 0, 14, 1, 10, 0, 14, 2, 14, 0, 12, 1, 15, 0, 16, 0, 15, 0, 16, 1, 15, 0, 16, 2, 16, 0, 17, 1, 12, 0, 17, 0, 17, 0, 0, 5)
